{"version":3,"sources":["components/FavoritesIndicator/FavoritesIndicator.jsx","components/TopBar/TopBar.jsx","backend/backend.js","redux/types/types.js","redux/actions/actions.js","components/FiltersBar/FiltersBar.jsx","components/ToggleFavoriteIcon/ToggleFavoriteIcon.jsx","components/JobCard/JobCard.jsx","components/JobsGrid/JobsGrid.jsx","views/Home.jsx","components/CompanyDetails/CompanyDetails.jsx","views/Company.jsx","components/FavoriteItem/FavoriteItem.jsx","views/FavoriteCompanies.jsx","views/FavoriteJobs.jsx","App.js","redux/reducers/favorites.js","redux/reducers/search.js","redux/store.js","index.js"],"names":["withRouter","type","list","history","className","onClick","push","length","TopBar","favorites","useSelector","state","id","Container","fluid","to","companies","jobs","remotive","axios","create","baseURL","process","ADD_COMPANY_TO_FAVORITES","REMOVE_COMPANY_FROM_FAVORITES","ADD_JOB_TO_FAVORITES","REMOVE_JOB_FROM_FAVORITES","SET_SEARCH_JOBS","SET_SEARCH_LOADING","fetchJobs","endpoint","dispatch","getState","a","types","payload","get","data","console","log","FiltersBar","useState","categories","setCategories","isLoading","setIsLoading","searchQuery","setSearchQuery","getCategories","useCallback","name","useEffect","useDispatch","getJobs","Row","Spinner","animation","variant","Dropdown","Toggle","Menu","map","category","Item","onSelect","Form","Group","Control","placeholder","value","onChange","e","target","onKeyDown","key","Button","ToggleFavoriteIcon","props","reduxState","addCompanyToFavs","companyName","addCompanyToFavorites","removeCompanyFromFavs","removeCompanyFromFavorites","addJobToFavs","job","addJobToFavorites","removeJobFromFavs","jobId","removeJobFromFavorites","includes","find","JobCard","isShowingDesc","setIsShowingDesc","Card","Body","Title","title","Badge","Text","moment","Date","publication_date","fromNow","job_type","candidate_required_location","salary","company_name","Subtitle","size","dangerouslySetInnerHTML","__html","description","JobsGrid","jobsList","connect","search","results","loading","match","setJobsList","getCompanyDetails","params","Company","FavoriteItem","App","exact","path","component","Home","FavoriteCompanies","FavoriteJobs","favoritesReducer","initialState","action","filter","searchReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistConfig","storage","transforms","encryptTransform","secretKey","mainReducer","combineReducers","persistedReducer","persistReducer","store","createStore","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.826ff8c6.chunk.js","sourcesContent":["import { withRouter } from \"react-router-dom\"\n\nimport \"./FavoritesIndicator.css\"\n\nconst FavoritesIndicator = ({ type, list, history }) => {\n  return (\n    <div\n      className=\"FavoritesIndicator d-flex align-items-center justify-content-center p-2 mx-2\"\n      onClick={() => {\n        if (type === \"companies\") history.push(\"/favoriteCompanies\")\n        else history.push(\"/favoriteJobs\")\n      }}\n    >\n      <p className=\"m-0\">{`Favorite ${type}`}</p>\n      <div className=\"num-of-favs d-flex align-items-center justify-content-center\">{list.length}</div>\n    </div>\n  )\n}\n\nexport default withRouter(FavoritesIndicator)\n","import { Container } from \"react-bootstrap\"\nimport { Link } from \"react-router-dom\"\nimport { useSelector } from \"react-redux\"\n\nimport FavoritesIndicator from \"../FavoritesIndicator/FavoritesIndicator\"\n\nimport \"./TopBar.css\"\n\nconst TopBar = () => {\n  const favorites = useSelector(state => state.favorites)\n  return (\n    <div id=\"fixed-compensator\">\n      <Container fluid className=\"TopBar d-flex align-items-center\">\n        <Link to=\"/remotive-persist\" className=\"mr-auto\">\n          <h1 className=\"py-1 text-center m-0\">Remotive Strive</h1>\n        </Link>\n        <FavoritesIndicator type=\"companies\" list={favorites.companies} />\n        <FavoritesIndicator type=\"jobs\" list={favorites.jobs} />\n      </Container>\n    </div>\n  )\n}\n\nexport default TopBar\n","import axios from \"axios\"\n\nconst remotive = axios.create({\n  baseURL: process.env.REACT_APP_BACKEND_URL,\n})\n\nexport default remotive\n","export const ADD_COMPANY_TO_FAVORITES = \"ADD_COMPANY_TO_FAVORITES\"\nexport const REMOVE_COMPANY_FROM_FAVORITES = \"REMOVE_COMPANY_FROM_FAVORITES\"\nexport const ADD_JOB_TO_FAVORITES = \"ADD_JOB_TO_FAVORITES\"\nexport const REMOVE_JOB_FROM_FAVORITES = \"REMOVE_JOB_FROM_FAVORITES\"\nexport const SET_SEARCH_JOBS = \"SET_SEARCH_JOBS\"\nexport const SET_SEARCH_LOADING = \"SET_SEARCH_LOADING\"\n","import remotive from \"../../backend/backend\"\nimport * as types from \"../types/types\"\n\nexport const addCompanyToFavorites = companyName => ({\n  type: types.ADD_COMPANY_TO_FAVORITES,\n  payload: companyName,\n})\n\nexport const removeCompanyFromFavorites = companyName => ({\n  type: types.REMOVE_COMPANY_FROM_FAVORITES,\n  payload: companyName,\n})\n\nexport const addJobToFavorites = job => ({\n  type: types.ADD_JOB_TO_FAVORITES,\n  payload: job,\n})\n\nexport const removeJobFromFavorites = jobId => ({\n  type: types.REMOVE_JOB_FROM_FAVORITES,\n  payload: jobId,\n})\n\nexport const fetchJobs = endpoint => {\n  return async (dispatch, getState) => {\n    dispatch({\n      type: types.SET_SEARCH_LOADING,\n      payload: true,\n    })\n    try {\n      const { data } = await remotive.get(endpoint)\n      dispatch({\n        type: types.SET_SEARCH_JOBS,\n        payload: data.jobs,\n      })\n      dispatch({\n        type: types.SET_SEARCH_LOADING,\n        payload: false,\n      })\n    } catch (error) {\n      console.log(error)\n      dispatch({\n        type: types.SET_SEARCH_LOADING,\n        payload: false,\n      })\n    }\n  }\n}\n","import { useState, useCallback, useEffect } from \"react\"\nimport { Button, Dropdown, Form, Row, Spinner } from \"react-bootstrap\"\nimport { useDispatch } from \"react-redux\"\nimport remotive from \"../../backend/backend\"\nimport { fetchJobs } from \"../../redux/actions/actions\"\n\nconst FiltersBar = () => {\n  const [categories, setCategories] = useState([])\n  const [isLoading, setIsLoading] = useState(false)\n  const [searchQuery, setSearchQuery] = useState(\"\")\n\n  const getCategories = useCallback(async () => {\n    setIsLoading(true)\n    const { data } = await remotive.get(\"/remote-jobs/categories\")\n    setCategories([{ name: \"All\", id: 0 }, ...data.jobs])\n    setIsLoading(false)\n  }, [])\n\n  useEffect(() => {\n    getCategories()\n  }, [getCategories])\n\n  const dispatch = useDispatch()\n  const getJobs = endpoint => dispatch(fetchJobs(endpoint))\n\n  return (\n    <Row className=\"d-flex flex-column align-items-start justify-content-center py-4\">\n      {isLoading ? (\n        <Spinner animation=\"border\" variant=\"info\" />\n      ) : (\n        <div className=\"d-flex w-100 align-items-end justify-content-between\">\n          <Dropdown>\n            <Dropdown.Toggle variant=\"outline-secondary\">Categories</Dropdown.Toggle>\n\n            <Dropdown.Menu>\n              {categories.map(category => (\n                <Dropdown.Item\n                  key={category.id}\n                  onSelect={() => {\n                    if (category.name === \"All\") getJobs(\"/remote-jobs?limit=200\")\n                    else {\n                      getJobs(`/remote-jobs?category=${category.name}`)\n                    }\n                  }}\n                >\n                  {category.name}\n                </Dropdown.Item>\n              ))}\n            </Dropdown.Menu>\n          </Dropdown>\n          <Form.Group className=\"d-flex m-0\">\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Search\"\n              className=\"mr-sm-2\"\n              value={searchQuery}\n              onChange={e => setSearchQuery(e.target.value)}\n              onKeyDown={e => {\n                if (e.key === \"Enter\") getJobs(`/remote-jobs?search=${searchQuery}`)\n              }}\n            />\n            <Button\n              variant=\"secondary\"\n              onClick={e => {\n                getJobs(`/remote-jobs?search=${searchQuery}`)\n              }}\n            >\n              Search\n            </Button>\n          </Form.Group>\n        </div>\n      )}\n    </Row>\n  )\n}\nexport default FiltersBar\n","import { useDispatch, useSelector } from \"react-redux\"\nimport { addCompanyToFavorites, addJobToFavorites, removeCompanyFromFavorites, removeJobFromFavorites } from \"../../redux/actions/actions\"\n\nimport \"./ToggleFavoriteIcon.css\"\n\nconst ToggleFavoriteIcon = props => {\n  const reduxState = useSelector(state => state)\n  const dispatch = useDispatch()\n  const addCompanyToFavs = companyName => dispatch(addCompanyToFavorites(companyName))\n  const removeCompanyFromFavs = companyName => dispatch(removeCompanyFromFavorites(companyName))\n  const addJobToFavs = job => dispatch(addJobToFavorites(job))\n  const removeJobFromFavs = jobId => dispatch(removeJobFromFavorites(jobId))\n\n  return (\n    <div className=\"ToggleFavoriteIcon\">\n      {(props.companyName && reduxState.favorites.companies.includes(props.companyName)) ||\n      (props.job && reduxState.favorites.jobs.find(job => job.id === props.job.id)) ? (\n        <i\n          className=\"fas fa-star\"\n          onClick={e => {\n            if (props.companyName) removeCompanyFromFavs(props.companyName)\n            else removeJobFromFavs(props.job.id)\n          }}\n        ></i>\n      ) : (\n        <i\n          className=\"far fa-star\"\n          onClick={e => {\n            if (props.companyName) addCompanyToFavs(props.companyName)\n            else addJobToFavs(props.job)\n          }}\n        ></i>\n      )}\n    </div>\n  )\n}\n\nexport default ToggleFavoriteIcon\n","import { useState } from \"react\"\nimport { Badge, Card, Button } from \"react-bootstrap\"\nimport { Link } from \"react-router-dom\"\nimport moment from \"moment\"\n\nimport \"./JobCard.css\"\nimport ToggleFavoriteIcon from \"../ToggleFavoriteIcon/ToggleFavoriteIcon\"\n\nconst JobCard = ({ job }) => {\n  const [isShowingDesc, setIsShowingDesc] = useState(false)\n  return (\n    <Card className=\"JobCard my-1\">\n      <Card.Body>\n        <div className=\"d-flex align-items-center\">\n          <ToggleFavoriteIcon job={job} />\n          <Card.Title className=\"my-0 ml-2 mr-4\">{job.title}</Card.Title>\n          <Badge variant=\"info\" className=\"my-auto\">\n            {job.category}\n          </Badge>\n        </div>\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <div>\n            <Card.Text className=\"m-0\">\n              <small>\n                <i className=\"fas fa-calendar-day\"></i> {moment(new Date(job.publication_date)).fromNow()}\n              </small>\n            </Card.Text>\n            {job.job_type && (\n              <Card.Text className=\"job-type m-0\">\n                <small>\n                  <i className=\"far fa-clock\"></i> {job.job_type}\n                </small>\n              </Card.Text>\n            )}\n            {job.candidate_required_location && (\n              <Card.Text className=\"job-type m-0\">\n                <small>\n                  <i className=\"fas fa-map-marked-alt\"></i> {job.candidate_required_location}\n                </small>\n              </Card.Text>\n            )}\n            {job.salary && (\n              <Card.Text className=\"m-0\">\n                <small>\n                  <i className=\"fas fa-money-bill-wave\"></i> {job.salary}\n                </small>\n              </Card.Text>\n            )}\n          </div>\n          <div className=\"d-flex align-items-center\">\n            <ToggleFavoriteIcon companyName={job.company_name} />\n            <Link to={`/companies/${job.company_name}`}>\n              <Card.Subtitle className=\"m-0 ml-2 text-muted text-right\">{job.company_name}</Card.Subtitle>\n            </Link>\n          </div>\n        </div>\n        <Button\n          variant={isShowingDesc ? \"warning\" : \"secondary\"}\n          size=\"sm\"\n          className=\"w-100 mt-2\"\n          onClick={() => setIsShowingDesc(!isShowingDesc)}\n        >\n          {isShowingDesc ? \"Hide Description\" : \"Show Description\"}\n        </Button>\n        {isShowingDesc && (\n          <div className=\"d-flex flex-column justify-content-end\">\n            <Card.Text className=\"mt-2 mb-0\">\n              <small dangerouslySetInnerHTML={{ __html: job.description }}></small>\n            </Card.Text>\n            <Button\n              variant={isShowingDesc ? \"warning\" : \"secondary\"}\n              size=\"sm\"\n              className=\"mt-2\"\n              onClick={() => setIsShowingDesc(!isShowingDesc)}\n            >\n              {isShowingDesc ? \"Hide Description\" : \"Show Description\"}\n            </Button>\n          </div>\n        )}\n      </Card.Body>\n    </Card>\n  )\n}\nexport default JobCard\n","import { Row, Spinner } from \"react-bootstrap\"\n\nimport JobCard from \"../JobCard/JobCard\"\n\nconst JobsGrid = ({ jobsList, isLoading }) => {\n  return (\n    <Row className=\"d-flex flex-column align-items-center justify-content-center py-4\">\n      {isLoading ? (\n        <Spinner animation=\"border\" variant=\"info\" />\n      ) : (\n        <>\n          <h3>{`Showing ${jobsList.length} ${jobsList.length > 1 ? \"jobs\" : \"job\"}!`}</h3>\n          {jobsList.map(job => (\n            <JobCard key={job.id} job={job} />\n          ))}\n        </>\n      )}\n    </Row>\n  )\n}\n\nexport default JobsGrid\n","import { useEffect } from \"react\"\nimport { connect } from \"react-redux\"\nimport { Container } from \"react-bootstrap\"\n\nimport FiltersBar from \"../components/FiltersBar/FiltersBar\"\nimport JobsGrid from \"../components/JobsGrid/JobsGrid\"\nimport { fetchJobs } from \"../redux/actions/actions\"\n\nconst mapStateToProps = state => state\nconst mapDispatchToProps = dispatch => ({\n  getJobs: endpoint => dispatch(fetchJobs(endpoint)),\n})\n\nconst Home = ({ search, getJobs }) => {\n  useEffect(() => {\n    getJobs(\"/remote-jobs?limit=200\")\n  }, [getJobs])\n\n  return (\n    <Container>\n      <FiltersBar />\n      <JobsGrid jobsList={search.results} isLoading={search.loading} />\n    </Container>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\n","import { useState, useEffect, useCallback } from \"react\"\nimport { withRouter } from \"react-router-dom\"\nimport remotive from \"../../backend/backend\"\nimport JobsGrid from \"../JobsGrid/JobsGrid\"\n\nconst CompanyDetails = ({ match }) => {\n  const [jobsList, setJobsList] = useState([])\n  const [isLoading, setIsLoading] = useState(false)\n\n  const getCompanyDetails = useCallback(async () => {\n    setIsLoading(true)\n    const { data } = await remotive.get(`/remote-jobs?company_name=${match.params.company_name}`)\n    setJobsList(data.jobs)\n    setIsLoading(false)\n  }, [match.params.company_name])\n\n  useEffect(() => {\n    getCompanyDetails()\n  }, [getCompanyDetails])\n\n  return (\n    <>\n      <h2 className=\"text-center text-muted my-1\">Company: {match.params.company_name}</h2>\n      <JobsGrid jobsList={jobsList} isLoading={isLoading} />\n    </>\n  )\n}\n\nexport default withRouter(CompanyDetails)\n","import { Container } from \"react-bootstrap\"\nimport CompanyDetails from \"../components/CompanyDetails/CompanyDetails\"\n\nconst Company = () => {\n  return (\n    <Container>\n      <CompanyDetails />\n    </Container>\n  )\n}\n\nexport default Company\n","import { Link } from \"react-router-dom\"\nimport ToggleFavoriteIcon from \"../ToggleFavoriteIcon/ToggleFavoriteIcon\"\n\nimport \"./FavoriteItem.css\"\n\nconst FavoriteItem = ({ companyName }) => {\n  return (\n    <div className=\"FavoriteItem text-center d-flex align-items-center justify-content-center m-3\">\n      <ToggleFavoriteIcon companyName={companyName} />\n      <Link to={`/companies/${companyName}`}>\n        <h2>{companyName}</h2>\n      </Link>\n    </div>\n  )\n}\n\nexport default FavoriteItem\n","import { Container } from \"react-bootstrap\"\nimport { connect } from \"react-redux\"\nimport FavoriteItem from \"../components/FavoriteItem/FavoriteItem\"\n\nconst mapStateToProps = state => state\n\nconst FavoriteCompanies = ({ favorites }) => {\n  return (\n    <Container>\n      <h3 className=\"text-center my-4\">Favorite Companies</h3>\n      <div className=\"d-flex flex-wrap justify-content-center align-items-center\">\n        {favorites.companies.map(companyName => (\n          <FavoriteItem key={companyName} companyName={companyName} />\n        ))}\n      </div>\n    </Container>\n  )\n}\n\nexport default connect(mapStateToProps)(FavoriteCompanies)\n","import { Container } from \"react-bootstrap\"\nimport { connect } from \"react-redux\"\n\nimport JobsGrid from \"../components/JobsGrid/JobsGrid\"\n\nconst mapStateToProps = state => state\n\nconst FavoriteJobs = ({ favorites }) => {\n  return (\n    <Container>\n      <h3 className=\"text-center my-4\">Favorite Jobs</h3>\n      <JobsGrid jobsList={favorites.jobs} />\n    </Container>\n  )\n}\n\nexport default connect(mapStateToProps)(FavoriteJobs)\n","import { Route } from \"react-router-dom\"\n\nimport TopBar from \"./components/TopBar/TopBar\"\nimport Home from \"./views/Home\"\n\nimport \"./App.css\"\nimport Company from \"./views/Company\"\nimport FavoriteCompanies from \"./views/FavoriteCompanies\"\nimport FavoriteJobs from \"./views/FavoriteJobs\"\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <TopBar />\n      <Route exact path=\"/\" component={Home} />\n      <Route exact path=\"/favoriteCompanies\" component={FavoriteCompanies} />\n      <Route exact path=\"/favoriteJobs\" component={FavoriteJobs} />\n      <Route path=\"/companies/:company_name\" component={Company} />\n    </div>\n  )\n}\n\nexport default App\n","import * as types from \"../types/types\"\nimport { initialState } from \"../store\"\n\nconst favoritesReducer = (state = initialState.favorites, action) => {\n  switch (action.type) {\n    case types.ADD_COMPANY_TO_FAVORITES:\n      return { ...state, companies: [...state.companies, action.payload] }\n\n    case types.REMOVE_COMPANY_FROM_FAVORITES:\n      return { ...state, companies: [...state.companies.filter(companyName => companyName !== action.payload)] }\n\n    case types.ADD_JOB_TO_FAVORITES:\n      return { ...state, jobs: [...state.jobs, action.payload] }\n\n    case types.REMOVE_JOB_FROM_FAVORITES:\n      return { ...state, jobs: [...state.jobs.filter(job => job.id !== action.payload)] }\n\n    default:\n      return state\n  }\n}\n\nexport default favoritesReducer\n","import * as types from \"../types/types\"\nimport { initialState } from \"../store\"\n\nconst searchReducer = (state = initialState.search, action) => {\n  switch (action.type) {\n    case types.SET_SEARCH_JOBS:\n      return { ...state, results: action.payload }\n\n    case types.SET_SEARCH_LOADING:\n      return { ...state, loading: action.payload }\n    default:\n      return state\n  }\n}\n\nexport default searchReducer\n","import { createStore, combineReducers, compose, applyMiddleware } from \"redux\"\nimport thunk from \"redux-thunk\"\n\nimport favoritesReducer from \"./reducers/favorites\"\nimport searchReducer from \"./reducers/search\"\n\nimport { persistStore, persistReducer } from \"redux-persist\"\nimport storage from \"redux-persist/lib/storage\"\nimport { encryptTransform } from \"redux-persist-transform-encrypt\"\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nexport const initialState = {\n  favorites: {\n    companies: [],\n    jobs: [],\n  },\n  search: {\n    results: [],\n    loading: false,\n  },\n}\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  transforms: [\n    encryptTransform({\n      secretKey: process.env.REACT_APP_PERSIST_TRANSFORM_SECRET_KEY,\n    }),\n  ],\n}\n\nconst mainReducer = combineReducers({\n  favorites: favoritesReducer,\n  search: searchReducer,\n})\n\nconst persistedReducer = persistReducer(persistConfig, mainReducer)\n\nconst store = createStore(persistedReducer, composeEnhancers(applyMiddleware(thunk)))\nconst persistor = persistStore(store)\n\nexport { store, persistor }\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { BrowserRouter as Router } from \"react-router-dom\"\nimport App from \"./App\"\n\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport { Provider } from \"react-redux\"\nimport { store, persistor } from \"./redux/store\"\nimport { PersistGate } from \"redux-persist/integration/react\"\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor} loading={null}>\n      <Router>\n        <App />\n      </Router>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}